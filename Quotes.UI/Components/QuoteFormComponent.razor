@using Quotes.UI.Service.CommonState
@using Quotes.UI.Service.Services.Interface;
@inject ISnackbar snackBar;
@inject IQuoteService _quoteService;
@inject AppState AppState;

<MudForm @ref="form" Model="@ModelData" onsubmit="@OnFormSubmit">
    <MudPaper Elevation="@(IsCreatePage ? 1 : 0)" Class="@(IsCreatePage ? "p-3" :"pt-5")">
        <MudGrid Justify="Justify.Center" Spacing="4">
            @foreach (var item in ModelData)
            {
                <QuoteCardComponent Data="item" IsCreatePage="IsCreatePage" IsUpdatePage="IsUpdatePage" />
            }
            <MudItem xs="12" sm="7" lg="5" xl="4" xxl="3" Class=@("mt-1 " + (!IsCreatePage ? "d-none" : ""))>
                <MudButton FullWidth OnClick="AddQuote" Variant="Variant.Filled" Color="Color.Surface" >
                    <MudIcon Icon="@Icons.Material.Filled.AddBox" Color="Color.Dark" />
                </MudButton>
            </MudItem>
        </MudGrid>
    </MudPaper>
    @if(AppState?.UserRole =="user"){

    <MudItem Class=@("justify-content-center align-items-center mt-5 " + (!IsCreatePage && !IsUpdatePage ? "d-none" : "d-flex"))>
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">@(IsCreatePage ? "Create Quote" : "Update Quote" )</MudButton>
        </MudItem>
    }
    else
    {
        <MudItem Class=@("justify-content-center align-items-center mt-5 " + (!IsUpdatePage ? "d-none" : "d-flex"))>
            <MudButton ButtonType="ButtonType.Button" OnClick="()=>UpdateStage(true)" Variant="Variant.Filled" Color="Color.Success">@(AppState.UserRole == "admin" ? "Approve Quote" : "Approve Validation")</MudButton>
            <MudButton ButtonType="ButtonType.Button" OnClick="()=>UpdateStage(false)" Variant="Variant.Filled" Color="Color.Error">@(AppState.UserRole == "admin" ? "Reject Quote" : "Reject Validation")</MudButton>

        </MudItem>
    }
</MudForm>

